---
# tasks file for python3

- name: testing for built {{ compiled_python_dist_name }}
  command: python{{ compiled_python_version.rsplit('.', 1)[0] }} --version
  changed_when: false
  ignore_errors: True

- block:

  - name: install deps for building {{ compiled_python_dist_name }} (Centos)
    yum:
      name: "{{ item }}"
      state: present
    loop: "{{ compiled_python3_centos7_deps }}"

  when: ansible_os_family == "RedHat"


- block:

  - name: Update cache (Debian)
    raw: sudo apt-get update
    register: task_result
    changed_when: False
    until: task_result is success
    retries: 5
    ignore_errors: yes

  - name: install deps for building {{ compiled_python_dist_name }} (Debian)
    apt:
      name: "{{ item }}"
      state: present
    loop: "{{ compiled_python3_debian_deps }}"

  when: ansible_os_family == "Debian"

- name: Ensure unpack dir exists
  file:
     state: directory
     path: "{{ compiled_python_build_dir }}/{{ compiled_python_dist_name }}"

- name: extract tarball
  unarchive:
     remote_src: True
     src: "https://www.python.org/ftp/python/{{ compiled_python_version }}/{{ compiled_python_tarball }}"
     dest: "{{ compiled_python_build_dir }}"
  register: extract_result
  until: extract_result is success
  retries: 5
  delay: 10

- name: cfg build env
  command: ./configure {{ compiled_configure_flags }}
  args:
      chdir: "{{ compiled_python_build_dir }}/{{ compiled_python_dist_name }}"
  register: result
  changed_when: false

- debug: msg={{ result }}
  when: result is failed

- name: build new src
  make:
      chdir: "{{ compiled_python_build_dir }}/{{ compiled_python_dist_name }}"
      target: altinstall
  register: make_results

- name: clean up build of {{ compiled_python_dist_name }}
  file:
      state: absent
      path: "{{ compiled_python_build_dir }}/{{ compiled_python_dist_name }}"
  when: make_results is success


#- block:
#  - name: uninstall deps for building {{ compiled_python_dist_name }}
#    yum:
#      name: "{{ item }}"
#      state: absent
#    loop: "{{ compiled_python3_centos7_deps }}"
#    ignore_errors: True
#  when: ansible_os_family == "RedHat"

#- block:
#  - name: uninstall deps for building {{ compiled_python_dist_name }}
#    apt:
#      name: "{{ item }}"
#      state: absent
#    loop: "{{ compiled_python3_debian_deps }}"
#    ignore_errors: True
#  when: ansible_os_family == "Debian"


- name: testing for built {{ compiled_python_dist_name }}
  command: python{{ compiled_python_version.rsplit('.', 1)[0] }} --version
  register: existing_python
  changed_when: false
  ignore_errors: True

- debug: msg="{{ existing_python.stdout_lines }} is present"

